version: "3.3"

services:
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=ai4mde_traefik"
      - "--entrypoints.web.address=:80"
    networks:
      - ai4mde_traefik
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  postgres:
    image: postgres
    env_file: config/postgres.env
    volumes:
      - pgsql-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - ai4mde_traefik

  studio-api:
    depends_on: ["postgres"]
    build:
      context: api
    env_file:
      - config/api.env
      - config/api_keys.env
    networks:
      - ai4mde_traefik
    volumes:
      - ./api/model:/usr/src/model:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.studio-api.rule=Host(`api.ai4mde.localhost`)"
      - "traefik.http.routers.studio-api.entrypoints=web"
      - "traefik.http.services.studio-api.loadbalancer.server.port=8000"

  studio-prototypes:
    depends_on: ["postgres"]
    build:
      context: prototypes
    env_file: config/prototypes.env
    networks:
      - ai4mde_traefik
    volumes:
      - ./prototypes:/usr/src/prototypes
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.studio-prototypes.rule=Host(`prototypes.ai4mde.localhost`)"
      - "traefik.http.routers.studio-prototypes.entrypoints=web"
      - "traefik.http.services.studio-prototypes.loadbalancer.server.port=8010"

  studio:
    build:
      context: frontend
    env_file: config/frontend.env
    volumes:
      - ./frontend/src:/usr/src/app/src:ro
    networks:
      - ai4mde_traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.studio.rule=Host(`ai4mde.localhost`)"
      - "traefik.http.routers.studio.entrypoints=web"
      - "traefik.http.services.studio.loadbalancer.server.port=5173"

volumes:
  pgsql-data:
  
networks:
  ai4mde_traefik:
    name: "ai4mde_traefik"
  postgres:
