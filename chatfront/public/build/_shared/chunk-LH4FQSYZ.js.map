{
  "version": 3,
  "sources": ["../../../app/components/layout/theme-provider.tsx", "../../../app/hooks/use-local-storage.ts", "../../../app/components/layout/theme-toggle.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/layout/theme-provider.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/layout/theme-provider.tsx\");\n  import.meta.hot.lastModified = \"1738670853734.4736\";\n}\n// REMIX HMR END\n\nimport * as React from \"react\";\nimport { createContext, useContext, useEffect } from \"react\";\nimport { useLocalStorage } from \"../../hooks/use-local-storage\";\nconst initialState = {\n  theme: \"system\",\n  setTheme: () => null\n};\nconst ThemeProviderContext = createContext(initialState);\nexport function ThemeProvider({\n  children,\n  defaultTheme = \"system\"\n}) {\n  _s();\n  const [theme, setTheme] = useLocalStorage(\"theme\", defaultTheme);\n  useEffect(() => {\n    const root = window.document.documentElement;\n    root.classList.remove(\"light\", \"dark\");\n    if (theme === \"system\") {\n      const systemTheme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n      root.classList.add(systemTheme);\n      return;\n    }\n    root.classList.add(theme);\n  }, [theme]);\n  const value = {\n    theme,\n    setTheme: theme => {\n      setTheme(theme);\n    }\n  };\n  return <ThemeProviderContext.Provider value={value}>\n      {children}\n    </ThemeProviderContext.Provider>;\n}\n_s(ThemeProvider, \"YGS+s8CVEWRviNom18nwlIGWkHI=\", false, function () {\n  return [useLocalStorage];\n});\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeProviderContext);\n  if (context === undefined) throw new Error(\"useTheme must be used within a ThemeProvider\");\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/hooks/use-local-storage.ts\"\n);\nimport.meta.hot.lastModified = \"1738662837903.6753\";\n}\n// REMIX HMR END\n\nimport { useState, useEffect } from \"react\"\n\nexport function useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    if (typeof window === \"undefined\") {\n      return initialValue\n    }\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? JSON.parse(item) : initialValue\n    } catch (error) {\n      console.log(error)\n      return initialValue\n    }\n  })\n\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value\n      setStoredValue(valueToStore)\n      if (typeof window !== \"undefined\") {\n        window.localStorage.setItem(key, JSON.stringify(valueToStore))\n      }\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return [storedValue, setValue] as const\n} ", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/layout/theme-toggle.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/layout/theme-toggle.tsx\");\n  import.meta.hot.lastModified = \"1738670797996.6746\";\n}\n// REMIX HMR END\n\nimport * as React from \"react\";\nimport { Moon, Sun } from \"lucide-react\";\nimport { useTheme } from \"./theme-provider\";\nimport { Button } from \"../ui/button\";\nimport { DropdownMenu, DropdownMenuContent, DropdownMenuItem, DropdownMenuTrigger } from \"../ui/dropdown-menu\";\nexport function ThemeToggle() {\n  _s();\n  const {\n    setTheme\n  } = useTheme();\n  return <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button variant=\"outline\" size=\"icon\">\n          <Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n          <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n          <span className=\"sr-only\">Toggle theme</span>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\">\n        <DropdownMenuItem onClick={() => setTheme(\"light\")}>\n          Light\n        </DropdownMenuItem>\n        <DropdownMenuItem onClick={() => setTheme(\"dark\")}>\n          Dark\n        </DropdownMenuItem>\n        <DropdownMenuItem onClick={() => setTheme(\"system\")}>\n          System\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>;\n}\n_s(ThemeToggle, \"a3u8LKbpX4CXbd+e8SJ1SuQ9KPw=\", false, function () {\n  return [useTheme];\n});\n_c = ThemeToggle;\nvar _c;\n$RefreshReg$(_c, \"ThemeToggle\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "theme", "import_jsx_dev_runtime", "_s", "_c"]
}
