{
  "version": 3,
  "sources": ["empty-module:../services/auth.server", "../../../app/routes/login.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/login.tsx\");\n  import.meta.hot.lastModified = \"1738662837905.6753\";\n}\n// REMIX HMR END\n\nimport * as React from \"react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useSearchParams } from \"@remix-run/react\";\nimport { authenticator } from \"../services/auth.server\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"../components/ui/card\";\nimport { Label } from \"../components/ui/label\";\nimport { Input } from \"../components/ui/input\";\nimport { Button } from \"../components/ui/button\";\nimport { Eye, EyeOff } from \"lucide-react\";\nexport async function loader({\n  request\n}) {\n  // If user is already authenticated, redirect to home\n  const user = await authenticator.isAuthenticated(request);\n  if (user) {\n    return redirect(\"/\");\n  }\n  return null;\n}\nexport async function action({\n  request\n}) {\n  const clonedRequest = request.clone();\n  const formData = await clonedRequest.formData();\n  const redirectTo = formData.get(\"redirectTo\")?.toString() || \"/\";\n  try {\n    // Attempt authentication with original request\n    return await authenticator.authenticate(\"form\", request, {\n      successRedirect: redirectTo,\n      failureRedirect: undefined,\n      throwOnError: true\n    });\n  } catch (error) {\n    // Check if the error is a redirect response (status 302)\n    if (error instanceof Response && error.status === 302) {\n      return error; // Return the redirect response\n    }\n    console.error('Login action error:', {\n      error,\n      message: error instanceof Error ? error.message : 'Unknown error',\n      stack: error instanceof Error ? error.stack : undefined\n    });\n    return json({\n      error: error instanceof Error ? error.message : 'Authentication failed. Please check your credentials and try again.'\n    }, {\n      status: 400\n    });\n  }\n}\nexport default function Login() {\n  _s();\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/\";\n  const actionData = useActionData();\n  const [showPassword, setShowPassword] = React.useState(false);\n  return <main className=\"flex-1 min-h-[calc(100vh-12rem)] grid place-items-center bg-muted/50 -mt-[1px]\">\n      <Card className=\"w-full max-w-md mx-4 shadow-lg\">\n        <CardHeader className=\"space-y-4\">\n          <div className=\"flex justify-center\">\n            <img src=\"/images/logos/logo.svg\" alt=\"AI4MDE Logo\" className=\"h-12 w-12\" />\n          </div>\n          <div className=\"text-center\">\n            <CardTitle>Welcome to AI4MDE</CardTitle>\n            <CardDescription>Sign in to your account</CardDescription>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <Form method=\"post\" className=\"space-y-4\">\n            <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"username\">Username</Label>\n              <Input id=\"username\" name=\"username\" type=\"text\" required placeholder=\"Enter your username\" />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"password\">Password</Label>\n              <div className=\"relative\">\n                <Input id=\"password\" name=\"password\" type={showPassword ? \"text\" : \"password\"} required placeholder=\"Enter your password\" />\n                <Button type=\"button\" variant=\"ghost\" size=\"icon\" className=\"absolute right-0 top-0 h-full px-2 py-2 hover:bg-transparent\" onClick={() => setShowPassword(!showPassword)}>\n                  {showPassword ? <EyeOff className=\"h-10 w-10 text-muted-foreground\" /> : <Eye className=\"h-10 w-10 text-muted-foreground\" />}\n                  <span className=\"sr-only\">\n                    {showPassword ? \"Hide password\" : \"Show password\"}\n                  </span>\n                </Button>\n              </div>\n            </div>\n            {actionData?.error && <div className=\"text-sm text-red-500\">{actionData.error}</div>}\n            <Button type=\"submit\" className=\"w-full\">\n              Sign in\n            </Button>\n          </Form>\n        </CardContent>\n      </Card>\n    </main>;\n}\n_s(Login, \"4XgOQEnkOclHNsqnKB8ZaeWPE2o=\", false, function () {\n  return [useSearchParams, useActionData];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
