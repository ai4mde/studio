{
  "version": 3,
  "sources": ["../../../app/routes/srsdocs.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/srsdocs.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/srsdocs.tsx\");\n  import.meta.hot.lastModified = \"1738662837905.6753\";\n}\n// REMIX HMR END\n\nimport * as React from \"react\";\nimport { json } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport { promises as fs } from \"fs\";\nimport path from \"path\";\nimport matter from \"gray-matter\";\nimport { Button } from \"../components/ui/button\";\nimport { requireUser } from \"../services/session.server\";\nimport MaxWidthWrapper from \"../components/layout/max-width-wrapper\";\nimport { redirect } from \"@remix-run/node\";\nexport const meta = () => {\n  return [{\n    title: \"SRS Documentation - AI4MDE\"\n  }, {\n    description: \"Software Requirements Specification documentation for AI4MDE\"\n  }];\n};\nasync function getGroupDocuments(groupName) {\n  const docsDir = path.join(process.cwd(), 'data', 'liacs', 'srsdocs');\n  try {\n    const files = await fs.readdir(docsDir);\n    const docs = await Promise.all(files.filter(file => file.endsWith(\".md\")).map(async file => {\n      try {\n        const content = await fs.readFile(path.join(docsDir, file), \"utf-8\");\n        const {\n          data,\n          content: docContent\n        } = matter(content);\n\n        // Generate an ID from filename if not provided in frontmatter\n        const id = data.id || file.replace('.md', '');\n\n        // Use filename as title if not provided in frontmatter\n        const title = data.title || file.replace('.md', '').replace(/-/g, ' ');\n\n        // Generate description from content if not provided\n        const description = data.description || docContent.slice(0, 150) + '...';\n        return {\n          id,\n          title,\n          description,\n          date: data.date || new Date().toISOString(),\n          filename: file\n        };\n      } catch (error) {\n        console.error(`Error reading file ${file}:`, error);\n        return null;\n      }\n    }));\n    return docs.filter(doc => doc !== null).sort((a, b) => {\n      if (!a.date || !b.date) return 0;\n      return new Date(b.date).getTime() - new Date(a.date).getTime();\n    });\n  } catch (error) {\n    console.error(`Error accessing directory ${docsDir}:`, error);\n    return [];\n  }\n}\nexport async function loader({\n  request\n}) {\n  try {\n    const user = await requireUser(request);\n    if (!user.group_name) {\n      throw new Response(\"User group not found\", {\n        status: 403\n      });\n    }\n    const docs = await getGroupDocuments(user.group_name);\n    return json({\n      docs\n    }, {\n      headers: {\n        'Cache-Control': 'no-store, no-cache, must-revalidate, proxy-revalidate',\n        'Pragma': 'no-cache',\n        'Expires': '0'\n      }\n    });\n  } catch (error) {\n    // Redirect to login if authentication fails\n    if (error instanceof Response && error.status === 401) {\n      return redirect(\"/login?redirectTo=/srsdocs\");\n    }\n    throw error;\n  }\n}\nfunction DocCard({\n  doc\n}) {\n  return <div className=\"rounded-lg border bg-card text-card-foreground shadow-sm hover:shadow-md transition-shadow\">\n      <div className=\"p-6\">\n        <h3 className=\"text-2xl font-semibold leading-none tracking-tight mb-2\">\n          {doc.title}\n        </h3>\n        <p className=\"text-sm text-muted-foreground mb-4\">\n          {doc.description}\n        </p>\n        {doc.date && <p className=\"text-xs text-muted-foreground mb-4\">\n            {new Date(doc.date).toLocaleDateString()}\n          </p>}\n        <Button asChild>\n          <Link to={`/srsdoc/${doc.id}`}>Read More</Link>\n        </Button>\n      </div>\n    </div>;\n}\n_c = DocCard;\nexport default function SrsDocs() {\n  _s();\n  const {\n    docs\n  } = useLoaderData();\n  return <MaxWidthWrapper className=\"py-8\">\n      <h1 className=\"text-4xl font-bold mb-6\">SRS Documentation</h1>\n      {docs.length === 0 ? <div className=\"text-center text-muted-foreground\">\n          <p>No SRS documents found.</p>\n        </div> : <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n          {docs.map(doc => <DocCard key={doc.id} doc={doc} />)}\n        </div>}\n    </MaxWidthWrapper>;\n}\n_s(SrsDocs, \"6v3qFFGo5l8sdWw4idpAr1svAlg=\", false, function () {\n  return [useLoaderData];\n});\n_c2 = SrsDocs;\nvar _c, _c2;\n$RefreshReg$(_c, \"DocCard\");\n$RefreshReg$(_c2, \"SrsDocs\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,kBAAqB;AAIrB,yBAAmB;AAEnB,qBAA4B;AAE5B,IAAAA,eAAyB;AAkFjB;AA/GR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,6BAA+B,EAAE;AAAA,EAC1E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwB;AACxB,cAAY,IAAI,eAAe;AACjC;AAaO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,GAAG;AAAA,IACD,aAAa;AAAA,EACf,CAAC;AACH;AAsEA,SAAS,QAAQ;AAAA,EACf;AACF,GAAG;AACD,SAAO,mDAAC,SAAI,WAAU,8FAClB,6DAAC,SAAI,WAAU,OACb;AAAA,uDAAC,QAAG,WAAU,2DACX,cAAI,SADP;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,OAAE,WAAU,sCACV,cAAI,eADP;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACC,IAAI,QAAQ,mDAAC,OAAE,WAAU,sCACrB,cAAI,KAAK,IAAI,IAAI,EAAE,mBAAmB,KAD9B;AAAA;AAAA;AAAA;AAAA,WAEX;AAAA,IACF,mDAAC,UAAO,SAAO,MACb,6DAAC,QAAK,IAAI,WAAW,IAAI,MAAM,yBAA/B;AAAA;AAAA;AAAA;AAAA,WAAwC,KAD1C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAZF;AAAA;AAAA;AAAA;AAAA,SAaA,KAdG;AAAA;AAAA;AAAA;AAAA,SAeL;AACJ;AACA,KAAK;AACU,SAAR,UAA2B;AAChC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,mBAAgB,WAAU,QAC9B;AAAA,uDAAC,QAAG,WAAU,2BAA0B,iCAAxC;AAAA;AAAA;AAAA;AAAA,WAAyD;AAAA,IACxD,KAAK,WAAW,IAAI,mDAAC,SAAI,WAAU,qCAChC,6DAAC,OAAE,uCAAH;AAAA;AAAA;AAAA;AAAA,WAA0B,KADT;AAAA;AAAA;AAAA;AAAA,WAEnB,IAAS,mDAAC,SAAI,WAAU,4CACrB,eAAK,IAAI,SAAO,mDAAC,WAAqB,OAAR,IAAI,IAAlB;AAAA;AAAA;AAAA;AAAA,WAAgC,CAAE,KAD5C;AAAA;AAAA;AAAA;AAAA,WAET;AAAA,OANC;AAAA;AAAA;AAAA;AAAA,SAOL;AACJ;AACA,GAAG,SAAS,gCAAgC,OAAO,WAAY;AAC7D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,MAAM;AACN,IAAI;AAAJ,IAAQ;AACR,aAAa,IAAI,SAAS;AAC1B,aAAa,KAAK,SAAS;AAE3B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_node"]
}
