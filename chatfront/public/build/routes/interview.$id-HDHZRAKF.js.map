{
  "version": 3,
  "sources": ["../../../app/routes/interview.$id.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/interview.$id.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/interview.$id.tsx\");\n}\n// REMIX HMR END\n\nimport * as React from \"react\";\nimport { json } from \"@remix-run/node\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport { promises as fs } from \"fs\";\nimport path from \"path\";\nimport matter from \"gray-matter\";\nimport Markdown from \"markdown-to-jsx\";\nimport hljs from 'highlight.js';\nimport \"highlight.js/styles/atom-one-dark.css?__remix_sideEffect__\";\nimport MaxWidthWrapper from \"../components/layout/max-width-wrapper\";\nimport { requireUser } from \"../services/session.server\";\nimport { Button } from \"../components/ui/button\";\nimport { ChevronLeft } from \"lucide-react\";\nimport { cn } from \"../lib/utils\";\nimport { redirect } from \"@remix-run/node\";\nexport const meta = ({\n  data\n}) => {\n  if (!data?.interview) {\n    return [{\n      title: \"Interview Not Found - AI4MDE\"\n    }, {\n      description: \"The requested interview log could not be found.\"\n    }];\n  }\n  return [{\n    title: `${data.interview.data.title} - AI4MDE`\n  }, {\n    description: data.interview.data.description\n  }];\n};\nasync function getInterview(groupName, id) {\n  const interviewsDir = path.join(process.cwd(), 'data', groupName, 'interviews');\n  try {\n    const files = await fs.readdir(interviewsDir);\n    const mdFiles = files.filter(file => file.endsWith('.md'));\n    for (const file of mdFiles) {\n      const content = await fs.readFile(path.join(interviewsDir, file), 'utf-8');\n      const {\n        data: frontMatter,\n        content: interviewContent\n      } = matter(content);\n      const fileId = frontMatter.id || file.replace('.md', '');\n      if (fileId === id) {\n        return {\n          content: interviewContent,\n          data: {\n            id: fileId,\n            title: frontMatter.title || file.replace('.md', '').replace(/-/g, ' '),\n            description: frontMatter.description || interviewContent.slice(0, 150) + '...',\n            date: frontMatter.date || new Date().toISOString(),\n            filename: file\n          }\n        };\n      }\n    }\n    return null;\n  } catch (error) {\n    console.error('Error reading interview:', error);\n    return null;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  try {\n    const user = await requireUser(request);\n    if (!user.group_name) {\n      throw new Response(\"User group not found\", {\n        status: 403\n      });\n    }\n    const interview = await getInterview(user.group_name, params.id || '');\n    if (!interview) {\n      throw new Response(\"Interview not found\", {\n        status: 404\n      });\n    }\n    return json({\n      interview\n    }, {\n      headers: {\n        'Cache-Control': 'no-store, no-cache, must-revalidate, proxy-revalidate',\n        'Pragma': 'no-cache',\n        'Expires': '0'\n      }\n    });\n  } catch (error) {\n    // Redirect to login if authentication fails\n    if (error instanceof Response && error.status === 401) {\n      return redirect(`/login?redirectTo=/interview/${params.id}`);\n    }\n    throw error;\n  }\n}\n\n// Add components for enlargeable elements (DiagramImage, EnlargeableTable, EnlargeableCode)\n// ... (same components as in srsdoc.$id.tsx) ...\n\nfunction CodeBlock({\n  className = \"\",\n  children\n}) {\n  _s();\n  const language = className.replace(/language-/, '');\n  const html = React.useMemo(() => {\n    if (language && hljs.getLanguage(language)) {\n      try {\n        return hljs.highlight(children, {\n          language\n        }).value;\n      } catch (err) {\n        console.error('Error highlighting code:', err);\n      }\n    }\n    return hljs.highlightAuto(children).value;\n  }, [children, language]);\n  return <pre className=\"!p-0 !m-0 !bg-transparent mb-10\">\n      <code className={`block p-4 rounded-lg bg-muted overflow-x-auto ${language ? `hljs language-${language}` : 'hljs'}`} dangerouslySetInnerHTML={{\n      __html: html\n    }} />\n\n    </pre>;\n}\n_s(CodeBlock, \"OtathaP3BKVCXaZtVNvoS+3QIcY=\");\n_c = CodeBlock;\nconst markdownOptions = {\n  options: {\n    forceBlock: true,\n    forceWrapper: true,\n    wrapper: 'div',\n    disableParsingRawHTML: false,\n    escapeHtml: false\n  },\n  overrides: {\n    h1: {\n      props: {\n        className: \"text-3xl font-bold mt-8 mb-4\"\n      }\n    },\n    h2: {\n      props: {\n        className: \"text-2xl font-semibold mt-6 mb-3\"\n      }\n    },\n    h3: {\n      props: {\n        className: \"text-xl font-semibold mt-4 mb-2\"\n      }\n    },\n    h4: {\n      props: {\n        className: \"text-lg font-semibold mt-4 mb-2\"\n      }\n    },\n    p: {\n      props: {\n        className: \"text-muted-foreground mb-4\"\n      }\n    },\n    ul: {\n      props: {\n        className: \"list-disc list-inside mb-4 ml-4\"\n      }\n    },\n    ol: {\n      props: {\n        className: \"list-decimal list-inside mb-4 ml-4\"\n      }\n    },\n    li: {\n      props: {\n        className: \"mb-1\"\n      }\n    },\n    a: {\n      props: {\n        className: \"text-primary hover:underline\"\n      }\n    },\n    blockquote: {\n      props: {\n        className: \"border-l-4 border-primary pl-4 italic my-4\"\n      }\n    },\n    code: {\n      component: CodeBlock\n    },\n    pre: {\n      component: ({\n        children\n      }) => children\n    },\n    img: {\n      props: {\n        className: \"max-w-full h-auto my-4 mx-auto rounded-lg shadow-md\",\n        loading: \"lazy\"\n      }\n    }\n  }\n};\nexport default function InterviewLog() {\n  _s2();\n  const {\n    interview\n  } = useLoaderData();\n  return <MaxWidthWrapper className=\"py-8\">\n      <div className=\"mb-8\">\n        <Button asChild variant=\"ghost\" size=\"sm\">\n          <Link to=\"/interviews\" className=\"flex items-center gap-2\">\n            <ChevronLeft className=\"h-4 w-4\" />\n            Back to Interviews\n          </Link>\n        </Button>\n      </div>\n\n      <article className={cn(\"max-w-none\", \"[&>h1]:text-4xl [&>h1]:font-bold [&>h1]:mb-4\", \"[&>h2]:text-3xl [&>h2]:font-semibold [&>h2]:mb-3 [&>h2]:mt-8\", \"[&>h3]:text-2xl [&>h3]:font-semibold [&>h3]:mb-2 [&>h3]:mt-6\", \"[&>p]:text-muted-foreground [&>p]:mb-4\", \"[&>ul]:list-disc [&>ul]:ml-6 [&>ul]:mb-4\", \"[&>ol]:list-decimal [&>ol]:ml-6 [&>ol]:mb-4\", \"[&>li]:mb-1\", \"[&>blockquote]:border-l-4 [&>blockquote]:border-primary [&>blockquote]:pl-4 [&>blockquote]:italic [&>blockquote]:my-4\", \"[&>pre]:bg-muted [&>pre]:p-4 [&>pre]:rounded-lg [&>pre]:mb-4 [&>pre]:overflow-x-auto\", \"[&>code]:bg-muted [&>code]:px-1.5 [&>code]:py-0.5 [&>code]:rounded\")}>\n        <h1 className=\"text-4xl font-bold mb-4\">{interview.data.title}</h1>\n        {interview.data.date && <p className=\"text-sm text-muted-foreground mb-8\">\n            {new Date(interview.data.date).toLocaleDateString()}\n          </p>}\n        <Markdown options={markdownOptions}>{interview.content}</Markdown>\n      </article>\n    </MaxWidthWrapper>;\n}\n_s2(InterviewLog, \"WIL9pEnfJT/Tdm1Dj5LvAS9BZuo=\", false, function () {\n  return [useLoaderData];\n});\n_c2 = InterviewLog;\nvar _c, _c2;\n$RefreshReg$(_c, \"CodeBlock\");\n$RefreshReg$(_c2, \"InterviewLog\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_node"]
}
